defmodule Nietflix.Repo.Migrations.CreateAllResources do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:post, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:rating, :bigint)
      add(:author_id, :uuid)
    end

    create table(:comment, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:rating, :bigint)

      add(
        :post_id,
        references(:post,
          column: :id,
          name: "comment_post_id_fkey",
          type: :uuid,
          prefix: "public"
        )
      )
    end

    create table(:author, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
    end

    alter table(:post) do
      modify(
        :author_id,
        references(:author,
          column: :id,
          name: "post_author_id_fkey",
          type: :uuid,
          prefix: "public"
        )
      )
    end
  end

  def down do
    drop(constraint(:post, "post_author_id_fkey"))

    alter table(:post) do
      modify(:author_id, :uuid)
    end

    drop(table(:author))

    drop(constraint(:comment, "comment_post_id_fkey"))

    drop(table(:comment))

    drop(table(:post))
  end
end
